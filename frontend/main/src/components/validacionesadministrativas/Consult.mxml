<?xml version="1.0" encoding="ISO-8859-1"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
		 label="Consulta"
		 horizontalAlign="right"
		 creationComplete="creationCompleteHandler(event)" xmlns:components="components.*">
	<mx:Script>
		<![CDATA[
			import events.GenericEvent;
			
			import model.Util;
			import model.ValidacionAdministrativa;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var items:ArrayCollection = null;
			
			private var validacionAdministrativa:ValidacionAdministrativa;
			private var _readMode:Boolean = false;
			
			public function set readMode(value:Boolean):void{
				this._readMode = value;
			}
			
			protected function responseGetAll_resultHandler(event:ResultEvent):void
			{
				this.setData( event.result as ArrayCollection );
			}
			
			public function setData( data:ArrayCollection ):void{
				this.items = data;
			}
			
			protected function requisicionService_faultHandler(event:FaultEvent):void
			{
				Util.showErrorMessage( Util.splitException( event.fault.faultString ) );
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				this.executeQuery();
			}
			
			protected function datagrid_doubleClickHandler(event:MouseEvent):void
			{
				var item:ValidacionAdministrativa = this.datagrid.selectedItem as ValidacionAdministrativa;
				if( item == null ){
					return;
				}
				this.responseGetItem.token = this.validacionAdministrativaService.getItem( item.id );
			}
			
			protected function responseGetItem_resultHandler(event:ResultEvent):void
			{
				var item:ValidacionAdministrativa = event.result as ValidacionAdministrativa;
				if( item == null ){
					return;
				}
				var genericEvent:GenericEvent = new GenericEvent("validationAdministrativeDetail");
				genericEvent.information = item;
				this.dispatchEvent( genericEvent );
			}
			
			public function executeQuery():void
			{
				if( !this._readMode ){
					this.responseGetAll.token = this.validacionAdministrativaService.getAll();
				}
			}
			
			protected function btnDelete_clickHandler(event:MouseEvent):void
			{
				if( this.datagrid.selectedItems == null ||
					this.datagrid.selectedItems.length == 0 ){
					Util.showErrorMessage("Debe seleccionar elementos de la tabla.");
					return;
				}
				Alert.show("Confirme si desea eliminar los elementos.","Advertencia",Alert.YES+Alert.NO,this, deleteItems);
			}
			
			private function deleteItems(event:CloseEvent):void
			{
				if( event.detail == Alert.NO ){
					return;
				}
				var items:ArrayCollection = Util.selectedIDs( this.datagrid.selectedItems ); 
				this.responseDeleteItems.token = this.validacionAdministrativaService.deleteItems( items );
			}
			
			protected function responseDeleteItems_resultHandler(event:ResultEvent):void
			{
				this.executeQuery();
			}
			
			private function labelFunctionIDProyecto(item:Object, column:DataGridColumn):String{
				return Util.getIDConectelFormat( Util.extractObject(item, column.dataField) );
			}
		]]>
	</mx:Script>
	<mx:Metadata>
		[Event(name="validationAdministrativeDetail", type="events.GenericEvent")]
	</mx:Metadata>
	<mx:HBox width="{Util.getGrandParentWidthLess(this)}" height="100%">
	<mx:DataGrid id="datagrid" width="2190" height="100%" dataProvider="{items}"
				 doubleClickEnabled="true" doubleClick="datagrid_doubleClickHandler(event)"
				 allowMultipleSelection="true">
		<mx:columns>
			<mx:DataGridColumn id="dtgID" headerText="ID"
							   dataField="id"
							   width="80"
							   textAlign="right"/>
			<mx:DataGridColumn id="dtgProjectID" headerText="{'ID\nProyecto'}"
							   dataField="proyecto.id"
							   labelFunction="labelFunctionIDProyecto"
							   visible="true"
							   width="90"/>
			<mx:DataGridColumn id="dtgOperationalValidationStatus" headerText="{'Revisión y\nValidación\nAdministrativa'}"
							   width="150"
							   dataField="estadoValidacionAdministrativa.etiqueta"
							   />
			<mx:DataGridColumn id="dtgTypeValidationAdministrative" headerText="{'Tipo\nValidación\nAdministrativa'}"
							   dataField="tipoValidacionAdministrativa.etiqueta"
							   width="150"/>
			<mx:DataGridColumn headerText="{'Porcentaje 1'}"
							   dataField="porcentaje1"
							   width="100"
							   textAlign="right"/>
			<mx:DataGridColumn headerText="{'Clave\nValidación 1'}"
							   dataField="claveValidacion1"
							   width="120"/>
			<mx:DataGridColumn headerText="{'Fecha\nValidación 1'}"
							   dataField="fechaValidacion1"
							   labelFunction="{Util.labelFunctionDate}"
							   width="100"
							   textAlign="center"/>
			<mx:DataGridColumn headerText="{'Estatus de\nCobro 1'}"
							   dataField="etadoValidacionCobro1.etiqueta"
							   width="120"/>
			<mx:DataGridColumn headerText="{'Porcentaje 2'}"
							   dataField="porcentaje2"
							   width="100"
							   textAlign="right"/>
			<mx:DataGridColumn headerText="{'Clave\nValidación 2'}"
							   dataField="claveValidacion2"
							   width="120"/>
			<mx:DataGridColumn headerText="{'Fecha\nValidación 2'}"
							   dataField="fechaValidacion2"
							   labelFunction="{Util.labelFunctionDate}"
							   width="100"
							   textAlign="center"/>
			<mx:DataGridColumn headerText="{'Estatus de\nCobro 2'}"
							   dataField="etadoValidacionCobro2.etiqueta"
							   width="120"/>
			<mx:DataGridColumn headerText="{'Porcentaje 3'}"
							   dataField="porcentaje3"
							   width="100"
							   textAlign="right"/>
			<mx:DataGridColumn headerText="{'Clave\nValidación 3'}"
							   dataField="claveValidacion3"
							   width="120"/>
			<mx:DataGridColumn headerText="{'Fecha\nValidación 3'}"
							   dataField="fechaValidacion3"
							   labelFunction="{Util.labelFunctionDate}"
							   width="100"
							   textAlign="center"/>
			<mx:DataGridColumn headerText="{'Estatus de\nCobro 3'}"
							   dataField="etadoValidacionCobro3.etiqueta"
							   width="120"/>
			<mx:DataGridColumn id="dtgTotalPorcentageRecovery" headerText="{'Porcentaje\nTotal\nCobro'}"
							   dataField="porcentajeTotalCobro"
							   width="100"
							   textAlign="right"/>
			<mx:DataGridColumn id="dtgFinalValidationStatus" headerText="{'Estado\nFinal\nValidación'}"
							   dataField="etadoValidacionFinal.etiqueta"
							   width="150"
							   textAlign="right"
							   />
			<mx:DataGridColumn id="dtgAttributable" headerText="{'Imputabilidad'}"
							   dataField="imputable.etiqueta"
							   width="150"
							   />
		</mx:columns>
	</mx:DataGrid>
	</mx:HBox>
	<mx:HBox>
		<mx:Button id="btnDelete" label="Eliminar" click="btnDelete_clickHandler(event)"
				   visible="{!this._readMode}"/>
		<components:ExportButton datagrid="{this.datagrid}" visible="{!this._readMode}"/>
	</mx:HBox>
	<mx:RemoteObject id="validacionAdministrativaService" destination="validacionAdministrativaService" fault="requisicionService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:CallResponder id="responseGetAll" result="responseGetAll_resultHandler(event)"/>
	<mx:CallResponder id="responseGetItem" result="responseGetItem_resultHandler(event)"/>
	<mx:CallResponder id="responseDeleteItems" result="responseDeleteItems_resultHandler(event)"/>
</mx:VBox>
