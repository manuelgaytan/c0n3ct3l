<?xml version="1.0" encoding="ISO-8859-1"?>
<mx:DataGrid xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="250"
			 dataProvider="{new ArrayCollection()}"
			 editable="{true}"
			 variableRowHeight="true"
			 doubleClick="doubleClickHandler(event)"
			 doubleClickEnabled="true"
			 allowMultipleSelection="{this._purchaseOrderMode}">
	<mx:Script>
		<![CDATA[
			import model.Perfil;
			import model.Model;
			import model.Constants;
			import model.PartidaRequisicionCompra;
			import model.Producto;
			import model.Proyecto;
			import model.ProyectoPadreHijo;
			import model.SolicitudServicioMaquilado;
			import model.Util;
			
			import mx.collections.ArrayCollection;
			import mx.com.gahm.componentes.validadores.Constantes;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			
			private var _purchaseOrderMode:Boolean = false;

			[Bindable]
			private var _readOnly:Boolean = false;
			
			public function set readOnly(value:Boolean):void{
				this._readOnly = value;
			}
			
			public function set purchaseOrderMode(value:Boolean):void{
				this._purchaseOrderMode = value;
			}
			
			public function addItem(entry:PartidaRequisicionCompra):void{
				if( entry == null ){
					return;
				}
				(this.dataProvider as ArrayCollection).addItem( entry );
			}
			
			public function reset():void
			{
				Util.removeItems( this.dataProvider );
			}
			
			private function labelFunctionImporte(item:Object, column:DataGridColumn):String{
				var returnValue:String = "";
				if( item != null &&
					item.cantidad != null &&
					item.costo != null ){
					var cantidad:Number = Util.stringToNumber(item.cantidad);
					if( !isNaN( cantidad ) ){
						item.importe = (cantidad*item.costo);
						returnValue = item.importe.toString();
					}
				}
				return returnValue;
			}

			protected function doubleClickHandler(event:MouseEvent):void
			{
				if( this._purchaseOrderMode ){
					return;
				}
				if( this._readOnly ){
					return;
				}
				if( this.selectedItems == null ||
					this.selectedItems.length == 0 ){
					Util.showErrorMessage("Debe seleccionar elementos de la tabla.");
					return;
				}
				Alert.show("Confirme si desea eliminar los elementos.","Advertencia",Alert.YES+Alert.NO,this, deleteItems);
			}
			
			private function deleteItems(event:CloseEvent):void
			{
				if( event.detail == Alert.NO ){
					return;
				}
				if( this.dataProvider == null || 
					!(this.dataProvider is ArrayCollection) ||
					(this.dataProvider as ArrayCollection) == null || 
					(this.dataProvider as ArrayCollection).length == 0 ){
					return;					
				}
				(this.dataProvider as ArrayCollection).removeItemAt( this.selectedIndex );
			}
			
			private function labelFunctionEstatusRequisicionCompra(item:Object, column:DataGridColumn):String{
				return Util.extractToText( item, "estatusRequisicionCompra.estatus" );
			}
			
			private function estaAutorizado():Boolean{
				return !this._purchaseOrderMode && Model.getInstance().user.allowedPerfil( Perfil.ID_DIRECTOR_GENERAL ) || Model.getInstance().user.allowedPerfil( Perfil.ID_COMPRAS );  
			}
		]]>
	</mx:Script>
	<mx:columns>
		<!--<mx:DataGridColumn id="dtgID" headerText="Partida"
						   dataField="partida"
						   width="60"
						   textAlign="center"/>-->
		<mx:DataGridColumn id="dtgCode" headerText="Código"
						   dataField="codigo"
						   width="100"
						   editable="false"/>
		<mx:DataGridColumn id="dtgFamilyGroup" headerText="{'Grupo o\nFamilia'}"
						   dataField="grupoFamilia"
						   width="100"
						   editable="false"/>
		<mx:DataGridColumn id="dtgQuantity" headerText="Cantidad"
						   dataField="cantidad"
						   width="60"
						   textAlign="right"
						   editable="false"/>
		<mx:DataGridColumn id="dtgUnit" headerText="Unidad"
						   dataField="unidad"
						   width="80"
						   textAlign="right"
						   editable="false"/>
		<mx:DataGridColumn id="dtgDescription" headerText="Descripción"
						   dataField="descripcion" wordWrap="true"
						   width="160"
						   editable="false"/>
		<mx:DataGridColumn id="dtgValidation" headerText="Validación"
						   dataField="validacion.nombreCompleto"
						   width="220"
						   visible="{!this._purchaseOrderMode}"
						   editable="false"/>
		<mx:DataGridColumn id="dtgCost" headerText="{'Precio\nUnitario'}"
						   dataField="costo"
						   width="80"
						   textAlign="right"
						   visible="{this._purchaseOrderMode}"
						   editable="{this._purchaseOrderMode}"/>
		<mx:DataGridColumn id="dtgImport" headerText="Importe"
						   dataField="importe"
						   width="80"
						   labelFunction="labelFunctionImporte"
						   textAlign="right"
						   editable="false"
						   visible="{!this._purchaseOrderMode}"/>
		<mx:DataGridColumn id="dtgItemStatus" headerText="{'Estatus'}"
						   labelFunction="labelFunctionEstatusRequisicionCompra"						   
						   dataField="estatusRequisicionCompra"
						   itemEditor="components.renderers.EstatusPartidaRequisicionCompraRenderer"
						   editorDataField="selectedItem"
						   editable="{this.estaAutorizado()}" textAlign="center"
						   width="110"
						   visible="{this.estaAutorizado()}"/>
	</mx:columns>
</mx:DataGrid>	
