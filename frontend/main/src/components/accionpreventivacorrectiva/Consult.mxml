<?xml version="1.0" encoding="ISO-8859-1"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
		 label="Consulta"
		 creationComplete="creationCompleteHandler(event)">
	<mx:Script>
		<![CDATA[
			import events.GenericEvent;
			
			import model.AccionPreventivaCorrectiva;
			import model.Util;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var items:ArrayCollection = null;
			
			[Bindable]
			private var _readMode:Boolean = false;
			
			public function set readMode(value:Boolean):void{
				this._readMode = value;
			}
			
			protected function responseGetAll_resultHandler(event:ResultEvent):void
			{
				items = event.result as ArrayCollection;
			}
			
			protected function accionPreventivaCorrectivaService_faultHandler(event:FaultEvent):void
			{
				Util.showErrorMessage( Util.splitException( event.fault.faultString ) );
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				this.executeQuery();
			}
			
			protected function datagrid_doubleClickHandler(event:MouseEvent):void
			{
				if( event.currentTarget.selectedItem == null ){
					return;
				}
				var item:AccionPreventivaCorrectiva = this.datagrid.selectedItem as AccionPreventivaCorrectiva;
				this.responseGetProyecto.token = this.accionPreventivaCorrectivaService.getItem( item.id );
			}
			
			protected function responseGetItem_resultHandler(event:ResultEvent):void
			{
				var item:AccionPreventivaCorrectiva = event.result as AccionPreventivaCorrectiva;
				if( item == null ){
					return;
				}
				var genericEvent:GenericEvent = new GenericEvent("itemDetail");
				genericEvent.information = item;
				this.dispatchEvent( genericEvent );
			}
			
			public function executeQuery():void
			{
				this.responseGetAll.token = this.accionPreventivaCorrectivaService.getAll();
			}
			
			private function labelFunctionDate(object:Object, column:DataGridColumn):String{
				return Util.formatDateToString( object[column.dataField] );
			}
			
			private function labelFunctionIDProyecto(item:Object, column:DataGridColumn):String{
				return Util.getIDConectelFormat( Util.extractObject(item, column.dataField) );
			}
			
			protected function btnDelete_clickHandler(event:MouseEvent):void
			{
				if( this.datagrid.selectedItems == null ||
					this.datagrid.selectedItems.length == 0 ){
					Util.showErrorMessage("Debe seleccionar elementos de la tabla.");
					return;
				}
				Alert.show("Confirme si desea eliminar los elementos.","Advertencia",Alert.YES+Alert.NO,this, deleteItems);
			}
			
			private function deleteItems(event:CloseEvent):void
			{
				if( event.detail == Alert.NO ){
					return;
				}
				var items:ArrayCollection = Util.selectedIDs( this.datagrid.selectedItems ); 
				this.responseDeleteItems.token = this.accionPreventivaCorrectivaService.deleteItems( items );
			}
			
			protected function responseDeleteItems_resultHandler(event:ResultEvent):void
			{
				this.executeQuery();
			}
		]]>
	</mx:Script>
	<mx:Metadata>
		[Event(name="itemDetail", type="events.GenericEvent")]
	</mx:Metadata>
	<mx:VBox id="vBox" width="100%" height="100%">
		<mx:DataGrid id="datagrid" width="942" height="100%" dataProvider="{items}"
					 doubleClickEnabled="true" doubleClick="datagrid_doubleClickHandler(event)"
					 allowMultipleSelection="true"
					 >
			<mx:columns>
				<mx:DataGridColumn id="dtgID" headerText="ID"
								   dataField="id"
								   width="60"
								   textAlign="right"/>
				<mx:DataGridColumn id="dtgNonConformityID" headerText="{'Folio de la\nNo Conformidad'}"
								   dataField="noConformidad.id"
								   textAlign="center"
								   width="60"/>
				<mx:DataGridColumn id="dtgOpenDate" headerText="{'Fecha \nApertura'}"
								   labelFunction="{Util.labelFunctionDate}"
								   dataField="fechaApertura"
								   width="100"/>
				<mx:DataGridColumn id="dtgActionType" headerText="{'Tipo\nAcción'}"
								   dataField="tipoAccion.accion"
								   width="100"/>
				<mx:DataGridColumn id="dtgSourceNonConformity" headerText="{'Fuente de la\nNo Conformidad'}"
								   dataField="fuenteNoConformidad.fuente"
								   width="150"/>
				<mx:DataGridColumn id="dtgResponsibleFollowUp" headerText="{'Responsable\nSeguimiento'}"
								   dataField="responsableSeguimiento"
								   width="150"/>
				<mx:DataGridColumn id="dtgEffectiveAction" headerText="{'¿Acción\ntomada\nEficaz?'}"
								   dataField="accionTomadaEficaz"
								   width="80"
								   textAlign="center"
								   itemRenderer="mx.controls.CheckBox"
								   editable="false"
								   />
				<mx:DataGridColumn id="dtgActionPCStatus" headerText="{'Estado de\nla Acción '}"
								   dataField="estadoAccionPreventivaCorrectiva.estado"
								   width="80"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:VBox>
	<mx:HBox width="100%">
		<mx:Spacer width="100%"/>
		<mx:Button id="btnDelete" label="Eliminar" click="btnDelete_clickHandler(event)"
				   visible="{!this._readMode}"/>
	</mx:HBox>
	<mx:RemoteObject id="accionPreventivaCorrectivaService" destination="accionPreventivaCorrectivaService" fault="accionPreventivaCorrectivaService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:CallResponder id="responseGetAll" result="responseGetAll_resultHandler(event)"/>
	<mx:CallResponder id="responseGetProyecto" result="responseGetItem_resultHandler(event)"/>
	<mx:CallResponder id="responseDeleteItems" result="responseDeleteItems_resultHandler(event)"/>
</mx:VBox>