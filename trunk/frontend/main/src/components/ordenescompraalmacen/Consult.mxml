<?xml version="1.0" encoding="ISO-8859-1"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
		 label="Consulta"
		 horizontalAlign="right"
		 creationComplete="creationCompleteHandler(event)" xmlns:components="components.*">
	<mx:Script>
		<![CDATA[
			import events.GenericEvent;
			
			import flash.net.navigateToURL;
			
			import model.Constants;
			import model.OrdenCompraAlmacen;
			import model.Reportes;
			import model.Util;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var items:ArrayCollection = null;
			
			private var ordenCompraAlmacen:OrdenCompraAlmacen;
			
			[Bindable]
			private var _readOnly:Boolean = false;
			
			public function set readOnly(value:Boolean):void{
				this._readOnly = value;
				this.label = Constants.DETALLE;
			}
			
			protected function responseGetAll_resultHandler(event:ResultEvent):void
			{
				items = event.result as ArrayCollection;
			}
			
			protected function ordenCompraAlmacenService_faultHandler(event:FaultEvent):void
			{
				Util.showErrorMessage( Util.splitException( event.fault.faultString ) );
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				if( !this._readOnly ){
					this.executeQuery();
				}
			}
			
			protected function datagrid_doubleClickHandler(event:MouseEvent):void
			{
				var item:OrdenCompraAlmacen = this.datagrid.selectedItem as OrdenCompraAlmacen;
				if( item == null ){
					return;
				}
				this.responseGetItem.token = this.ordenCompraService.getItem( item.id );
			}
			
			protected function responseGetItem_resultHandler(event:ResultEvent):void
			{
				var item:OrdenCompraAlmacen = event.result as OrdenCompraAlmacen;
				if( item == null ){
					return;
				}
				var genericEvent:GenericEvent = new GenericEvent("purchaseOrderDetail");
				genericEvent.information = item;
				this.dispatchEvent( genericEvent );
			}
			
			public function executeQuery():void
			{
				this.responseGetAll.token = this.ordenCompraService.getAll();
			}
			
			protected function btnDelete_clickHandler(event:MouseEvent):void
			{
				if( this.datagrid.selectedItems == null ||
					this.datagrid.selectedItems.length == 0 ){
					Util.showErrorMessage("Debe seleccionar elementos de la tabla.");
					return;
				}
				Alert.show("Confirme si desea eliminar los elementos.","Advertencia",Alert.YES+Alert.NO,this, deleteItems);
			}
			
			private function deleteItems(event:CloseEvent):void
			{
				if( event.detail == Alert.NO ){
					return;
				}
				var items:ArrayCollection = Util.selectedIDs( this.datagrid.selectedItems ); 
				this.responseDeleteItems.token = this.ordenCompraService.deleteItems( items );
			}
			
			protected function responseDeleteItems_resultHandler(event:ResultEvent):void
			{
				this.executeQuery();
			}
			
			private function labelFunctionGenerico(item:Object, column:DataGridColumn):String{
				return Util.extractToText( item, column.dataField );
			}
			
			private function labelFunctionDate(object:Object, column:DataGridColumn):String{
				return Util.formatDateToString( object[column.dataField] );
			}
			
			protected function btnViewFormat_clickHandler(event:MouseEvent):void
			{
				if( this.datagrid.selectedItem == null ){
					Util.showErrorMessage("Debe seleccionar un elemento de la tabla.");
					return;
				}
				//navigateToURL(new URLRequest("../formats/ODCM.pdf"));
				var params:Array = [{key:"id", value:this.datagrid.selectedItem.id}];
				Util.launchReport( Reportes.ORDEN_COMPRA_ALMANCEN, params );
			}
			
			public function setDataGridData(datas:ArrayCollection):void
			{
				items = datas;
			}
		]]>
	</mx:Script>
	<mx:Metadata>
		[Event(name="purchaseOrderDetail", type="events.GenericEvent")]
	</mx:Metadata>
	<mx:HBox width="{Util.getGrandParentWidthLess(this)}" height="100%">
	<mx:DataGrid id="datagrid" width="3590" height="100%" dataProvider="{items}"
				 doubleClickEnabled="true" doubleClick="datagrid_doubleClickHandler(event)"
				 allowMultipleSelection="true">
		<mx:columns>
			<mx:DataGridColumn id="dtgID" headerText="ID"
							   dataField="id"
							   width="80"
							   textAlign="right"/>
			<mx:DataGridColumn id="dtgProjectID" headerText="{'ID \nProyecto'}"
							   width="80"
							   dataField="proyecto.id"
							   labelFunction="labelFunctionGenerico"
							   textAlign="right"/>
			<mx:DataGridColumn id="dtgRequisicionID" headerText="{'ID \nRequisición'}"
							   width="90"
							   dataField="requisicionCompra.id"
							   labelFunction="labelFunctionGenerico"
							   textAlign="right"/>
			<mx:DataGridColumn id="dtgQuotationID" headerText="{'ID \nCotización'}"
							   width="80"
							   dataField="cotizacion.id"
							   labelFunction="labelFunctionGenerico"
							   textAlign="right"/>
			<mx:DataGridColumn id="dtgDate" headerText="Fecha"
							   width="80"
							   dataField="fecha"
							   labelFunction="labelFunctionDate"
							   textAlign="center"/>
			<mx:DataGridColumn id="dtgSupplier" headerText="{'Proveedor\nCalificado'}"
							   width="200"
							   dataField="proveedorCalificado.proveedorSeleccionado.proveedor.nombreComercial"
							   labelFunction="labelFunctionGenerico"/>
			<mx:DataGridColumn headerText="{'Razón Social'}"
							   dataField="proveedorCalificado.proveedorSeleccionado.proveedor.razonSocial"
							   width="200"/>
			<mx:DataGridColumn headerText="{'R.F.C.'}"
							   dataField="proveedorCalificado.proveedorSeleccionado.proveedor.rfc"
							   width="160"/>
			<mx:DataGridColumn headerText="{'Dirección Fiscal'}"
							   dataField="proveedorCalificado.proveedorSeleccionado.proveedor.direccionFisica"
							   width="120"/>
			<mx:DataGridColumn headerText="{'Teléfonos'}"
							   dataField="proveedorCalificado.proveedorSeleccionado.proveedor.telefonos"
							   width="120"/>
			<mx:DataGridColumn headerText="{'Contacto'}"
							   dataField="proveedorCalificado.proveedorSeleccionado.proveedor.contacto"
							   width="180"/>
			<mx:DataGridColumn headerText="{'Correo Electrónico'}"
							   dataField="proveedorCalificado.proveedorSeleccionado.proveedor.correo"
							   width="180"/>
			<mx:DataGridColumn headerText="{'Página Web'}"
							   dataField="proveedorCalificado.proveedorSeleccionado.proveedor.paginaWeb"
							   width="120"/>
			<mx:DataGridColumn headerText="{'Forma de Pago'}"
							   dataField="proveedorCalificado.formaPago.forma"
							   width="120"/>
			<mx:DataGridColumn headerText="{'Tipo de Pago'}"
							   dataField="proveedorCalificado.tipoPago.tipo"
							   width="120"/>
			<mx:DataGridColumn headerText="{'Moneda'}"
							   dataField="proveedorCalificado.moneda"
							   width="120"/>
			<mx:DataGridColumn headerText="{'Límite de\nCrédito'}"
							   dataField="proveedorCalificado.limiteCredito"
							   width="90"/>
			<mx:DataGridColumn headerText="{'Días de\nCrédito'}"
							   dataField="proveedorCalificado.diasCredito"
							   width="90"/>
			<mx:DataGridColumn headerText="{'Descuento'}"
							   dataField="proveedorCalificado.descuentos"
							   width="120"/>
			<mx:DataGridColumn id="dtgSubtotal" headerText="Subtotal"
							   width="80"
							   dataField="subtotal"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn id="dtgIVA" headerText="I.V.A."
							   width="80"
							   dataField="iva"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn headerText="I.E.P.S."
							   width="80"
							   dataField="ieps"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn headerText="{'Retención\nI.S.R.'}"
							   width="80"
							   dataField="retencionIsr"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn headerText="{'Retención\nI.V.A.'}"
							   width="80"
							   dataField="retencionIva"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn headerText="Otros Impuestos"
							   width="80"
							   dataField="otrosImpuestos"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn id="dtgTotal" headerText="Total"
							   width="80"
							   dataField="total"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn headerText="Importe con Letra"
							   width="300"
							   dataField="importeLetra"/>
			<mx:DataGridColumn headerText="{'Fecha de\nEntrega\nAlmacén'}"
							   width="80"
							   dataField="fechaEntregaAlmacen"
							   labelFunction="labelFunctionDate"
							   textAlign="center"/>
			<mx:DataGridColumn headerText="Leyenda"
							   width="300"
							   dataField="leyenda"/>
		</mx:columns>
	</mx:DataGrid>
	</mx:HBox>
	<mx:HBox>
		<mx:Button id="btnViewFormat" label="Visualizar Formato" click="btnViewFormat_clickHandler(event)"/>
		<mx:Button id="btnDelete" label="Eliminar" click="btnDelete_clickHandler(event)"
				   visible="{!this._readOnly}"/>
		<components:ExportButton datagrid="{this.datagrid}" visible="{!this._readOnly}"/>
	</mx:HBox>
	<mx:RemoteObject id="ordenCompraService" destination="ordenCompraService" fault="ordenCompraAlmacenService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:CallResponder id="responseGetAll" result="responseGetAll_resultHandler(event)"/>
	<mx:CallResponder id="responseGetItem" result="responseGetItem_resultHandler(event)"/>
	<mx:CallResponder id="responseDeleteItems" result="responseDeleteItems_resultHandler(event)"/>
</mx:VBox>
