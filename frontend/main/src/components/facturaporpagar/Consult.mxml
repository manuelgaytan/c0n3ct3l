<?xml version="1.0" encoding="ISO-8859-1"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
		 label="Consulta"
		 horizontalAlign="right"
		 creationComplete="creationCompleteHandler(event)" xmlns:components="components.*">
	<mx:Script>
		<![CDATA[
			import events.GenericEvent;
			
			import model.FacturaPorPagar;
			import model.Util;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var items:ArrayCollection = null;
			
			private var facturaPorPagar:FacturaPorPagar;
			
			protected function responseGetAll_resultHandler(event:ResultEvent):void
			{
				items = event.result as ArrayCollection;
			}
			
			protected function facturaPorPagarService_faultHandler(event:FaultEvent):void
			{
				Util.showErrorMessage( Util.splitException( event.fault.faultString ) );
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				this.executeQuery();
			}
			
			protected function datagrid_doubleClickHandler(event:MouseEvent):void
			{
				var item:FacturaPorPagar = this.datagrid.selectedItem as FacturaPorPagar;
				if( item == null ){
					return;
				}
				this.responseGetItem.token = this.facturaPorPagarService.getItem( item.id );
			}
			
			protected function responseGetItem_resultHandler(event:ResultEvent):void
			{
				var item:FacturaPorPagar = event.result as FacturaPorPagar;
				if( item == null ){
					return;
				}
				var genericEvent:GenericEvent = new GenericEvent("payableInvoiceDetail");
				genericEvent.information = item;
				this.dispatchEvent( genericEvent );
			}
			
			public function executeQuery():void
			{
				this.responseGetAll.token = this.facturaPorPagarService.getAll();
			}
			
			protected function btnDelete_clickHandler(event:MouseEvent):void
			{
				if( this.datagrid.selectedItems == null ||
					this.datagrid.selectedItems.length == 0 ){
					Util.showErrorMessage("Debe seleccionar elementos de la tabla.");
					return;
				}
				Alert.show("Confirme si desea eliminar los elementos.","Advertencia",Alert.YES+Alert.NO,this, deleteItems);
			}
			
			private function deleteItems(event:CloseEvent):void
			{
				if( event.detail == Alert.NO ){
					return;
				}
				var items:ArrayCollection = Util.selectedIDs( this.datagrid.selectedItems ); 
				this.responseDeleteItems.token = this.facturaPorPagarService.deleteItems( items );
			}
			
			protected function responseDeleteItems_resultHandler(event:ResultEvent):void
			{
				this.executeQuery();
			}
			
			private function labelFunctionGenerico(item:Object, column:DataGridColumn):String{
				return Util.extractToText( item, column.dataField );
			}
			
			private function labelFunctionDate(object:Object, column:DataGridColumn):String{
				return Util.formatDateToString( object[column.dataField] );
			}
			
			private function providerLabelFunction( item:Object, column:DataGridColumn ):String{
				var payableInvoice:FacturaPorPagar = item as FacturaPorPagar;
				var provider:String = "";
				if( payableInvoice == null ){
					return "";
				}
				if( payableInvoice.ordenCompra == null && payableInvoice.ordenCompraMaquilado != null ){
					provider = payableInvoice.ordenCompraMaquilado.proveedorMaquilador.proveedor.razonSocial;
				}
				if( payableInvoice.ordenCompra != null && payableInvoice.ordenCompraMaquilado == null  ){
					provider = payableInvoice.ordenCompra.proveedorCalificado.proveedorSeleccionado.proveedor.razonSocial;
				}
				return provider;
			}
			
			private function purchaseOrderIDLabelFunction( item:Object, column:DataGridColumn ):String{
				var payableInvoice:FacturaPorPagar = item as FacturaPorPagar;
				var purchaseOrderID:String = "";
				if( payableInvoice == null ){
					return "";
				}
				if( payableInvoice.ordenCompra == null && payableInvoice.ordenCompraMaquilado != null ){
					purchaseOrderID = payableInvoice.ordenCompraMaquilado.id.toString();
				}
				if( payableInvoice.ordenCompra != null && payableInvoice.ordenCompraMaquilado == null  ){
					purchaseOrderID = payableInvoice.ordenCompra.id.toString();
				}
				return purchaseOrderID;
			}
		]]>
	</mx:Script>
	<mx:Metadata>
		[Event(name="payableInvoiceDetail", type="events.GenericEvent")]
	</mx:Metadata>
	<mx:HBox width="{Util.getGrandParentWidthLess(this)}" height="100%">
	<mx:DataGrid id="datagrid" width="1480" height="100%" dataProvider="{items}"
				 doubleClickEnabled="true" doubleClick="datagrid_doubleClickHandler(event)"
				 allowMultipleSelection="true">
		<mx:columns>
			<mx:DataGridColumn id="dtgID" headerText="ID"
							   dataField="id"
							   width="60"
							   textAlign="right"/>
			<mx:DataGridColumn id="dtgPurchaseOrderID" headerText="{'Orden de\nCompra'}"
							   width="80"
							   labelFunction="purchaseOrderIDLabelFunction"
							   />
			<mx:DataGridColumn id="dtgProvider" headerText="Proveedor"
							   width="200"
							   dataField="ordenCompra.proveedorMaquilador.proveedor.id"
							   labelFunction="providerLabelFunction"
							   />
			<mx:DataGridColumn id="dtgFolio" headerText="Folio"
							   dataField="folio"
							   width="120"/>
			<mx:DataGridColumn id="dtgDate" headerText="Fecha"
							   dataField="fecha"
							   width="100"
							   textAlign="center"
							   labelFunction="labelFunctionDate"/>
			<mx:DataGridColumn id="dtgSubtotal" headerText="Subtotal"
							   width="100"
							   dataField="subtotal"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn id="dtgIVA" headerText="I.V.A."
							   width="100"
							   dataField="iva"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn headerText="I.E.P.S."
							   width="100"
							   dataField="ieps"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn headerText="{'Retención\nI.S.R.'}"
							   width="100"
							   dataField="retencionIsr"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn headerText="{'Retención\nI.V.A.'}"
							   width="100"
							   dataField="retencionIva"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn headerText="{'Otros\nImpuestos'}"
							   width="100"
							   dataField="otrosImpuestos"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn id="dtgTotal" headerText="Total"
							   width="100"
							   dataField="total"
							   labelFunction="{Util.labelFunctionCurrency}"
							   textAlign="right"/>
			<mx:DataGridColumn id="dtgPaymentDate" headerText="{'Fecha\nPago\nTotal'}"
							   dataField="fechaPago"
							   width="100"
							   textAlign="center"
							   labelFunction="labelFunctionDate"/>
			<mx:DataGridColumn id="dtgPaymentDate1" headerText="{'Fecha\nPago 1'}"
							   dataField="fechaPago1"
							   width="100"
							   textAlign="center"
							   labelFunction="labelFunctionDate"/>
			<mx:DataGridColumn id="dtgPercentagePayment1" headerText="{'Porcentaje de\nPago 1'}"
							   width="120"
							   dataField="porcentajePago1"
							   textAlign="right"/>
			<mx:DataGridColumn id="dtgPaymentDate2" headerText="{'Fecha\nPago 2'}"
							   dataField="fechaPago2"
							   width="100"
							   textAlign="center"
							   labelFunction="labelFunctionDate"/>
			<mx:DataGridColumn id="dtgPercentagePayment2" headerText="{'Porcentaje de\nPago 2'}"
							   width="120"
							   dataField="porcentajePago2"
							   textAlign="right"/>
		</mx:columns>
	</mx:DataGrid>
	</mx:HBox>
	<mx:HBox>
		<mx:Button id="btnDelete" label="Eliminar" click="btnDelete_clickHandler(event)"/>
		<components:ExportButton datagrid="{this.datagrid}"/>
	</mx:HBox>
	<mx:RemoteObject id="facturaPorPagarService" destination="facturaPorPagarService" fault="facturaPorPagarService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:CallResponder id="responseGetAll" result="responseGetAll_resultHandler(event)"/>
	<mx:CallResponder id="responseGetItem" result="responseGetItem_resultHandler(event)"/>
	<mx:CallResponder id="responseDeleteItems" result="responseDeleteItems_resultHandler(event)"/>
</mx:VBox>
