<?xml version="1.0" encoding="ISO-8859-1"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
		 label="Consulta"
		 horizontalAlign="right"
		 creationComplete="creationCompleteHandler(event)" xmlns:components="components.*">
	<mx:Script>
		<![CDATA[
			import events.GenericEvent;
			
			import model.ConfiguracionPruebaEntrega;
			import model.Contratacion;
			import model.DatosGeneralesSolicitante;
			import model.FiltroProyecto;
			import model.Proyecto;
			import model.Util;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var items:ArrayCollection = null;
			
			private var configuracionPruebaEntrega:ConfiguracionPruebaEntrega;
			[Bindable]
			private var _readMode:Boolean = false;
			
			public function set readMode(value:Boolean):void{
				this._readMode = value;
			}
			
			protected function responseGetAll_resultHandler(event:ResultEvent):void
			{
				items = event.result as ArrayCollection;
			}
			
			protected function contratacionService_faultHandler(event:FaultEvent):void
			{
				Util.showErrorMessage( Util.splitException( event.fault.faultString ) );
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				this.executeQuery();
			}
			
			protected function datagrid_doubleClickHandler(event:MouseEvent):void
			{
				if( event.currentTarget.selectedItem == null ){
					return;
				}
				var item:Contratacion = this.datagrid.selectedItem as Contratacion;
				this.responseGetProyecto.token = this.contratacionService.getItem( item.id );
			}
			
			protected function responseGetItem_resultHandler(event:ResultEvent):void
			{
				var item:Contratacion = event.result as Contratacion;
				if( item == null ){
					return;
				}
				var genericEvent:GenericEvent = new GenericEvent("itemDetail");
				genericEvent.information = item;
				this.dispatchEvent( genericEvent );
			}
			
			public function executeQuery():void
			{
				this.responseGetAll.token = this.contratacionService.getAll();
			}
			
			private function labelFunctionDate(object:Object, column:DataGridColumn):String{
				return Util.formatDateToString( object[column.dataField] );
			}
			
			private function labelFunctionIDProyecto(item:Object, column:DataGridColumn):String{
				return Util.getIDConectelFormat( Util.extractObject(item, column.dataField) );
			}
			
			protected function btnDelete_clickHandler(event:MouseEvent):void
			{
				if( this.datagrid.selectedItems == null ||
					this.datagrid.selectedItems.length == 0 ){
					Util.showErrorMessage("Debe seleccionar elementos de la tabla.");
					return;
				}
				Alert.show("Confirme si desea eliminar los elementos.","Advertencia",Alert.YES+Alert.NO,this, deleteItems);
			}
			
			private function deleteItems(event:CloseEvent):void
			{
				if( event.detail == Alert.NO ){
					return;
				}
				var items:ArrayCollection = Util.selectedIDs( this.datagrid.selectedItems ); 
				this.responseDeleteItems.token = this.contratacionService.deleteItems( items );
			}
			
			protected function responseDeleteItems_resultHandler(event:ResultEvent):void
			{
				this.executeQuery();
			}
			
			private function labelFunctionNombre( item:Object, column:DataGridColumn ):String{
				var contratacion:Contratacion = item as Contratacion;
				if( contratacion == null ||
					contratacion.seleccionSolicitudEmpleo == null ||
					contratacion.seleccionSolicitudEmpleo.reclutamientoSolicitudEmpleo.datosGeneralesSolicitante == null ){
					return "";
				}else{
					var datosGenerales:DatosGeneralesSolicitante = contratacion.seleccionSolicitudEmpleo.reclutamientoSolicitudEmpleo.datosGeneralesSolicitante;
					return datosGenerales.apellidoPaterno + " " + datosGenerales.nombres;
				}
			}
			
			public function setDataAndSelected( data:ArrayCollection ):void{
				this.datagrid.dataProvider = data;
				this.datagrid.selectedIndex = 0;
				this.datagrid.dispatchEvent( new MouseEvent( MouseEvent.DOUBLE_CLICK ) );
			}
		]]>
	</mx:Script>
	<mx:Metadata>
		[Event(name="itemDetail", type="events.GenericEvent")]
	</mx:Metadata>
	<mx:HBox width="{Util.getGrandParentWidthLess(this)}" height="100%">
		<mx:DataGrid id="datagrid" width="892" height="100%" dataProvider="{items}"
					 doubleClickEnabled="true" doubleClick="datagrid_doubleClickHandler(event)"
					 allowMultipleSelection="true"
					 >
			<mx:columns>
				<mx:DataGridColumn id="dtgID" headerText="ID"
								   dataField="id"
								   width="60"
								   textAlign="right"/>
				<mx:DataGridColumn id="dtgName" headerText="{'Nombre'}"
								   labelFunction="labelFunctionNombre"
								   width="250"/>
				<mx:DataGridColumn id="dtgPosition" headerText="{'Puesto'}"
								   dataField="seleccionSolicitudEmpleo.reclutamientoSolicitudEmpleo.datosPrincipalesSolicitante.puestoSolicitado"
								   width="120"/>
				<mx:DataGridColumn id="dtgInitialSalary" headerText="{'Sueldo Inicial'}"
								   dataField="sueldoInicial"
								   textAlign="right"
								   width="100"/>
				<mx:DataGridColumn headerText="{'Fecha de\nExpedición\nCertificado\nMédico'}"
								   labelFunction="{Util.labelFunctionDate}"
								   dataField="fechaExpedicionCertificadoMedico"
								   width="120"/>
				<mx:DataGridColumn headerText="{'Fecha de\nVencimiento\nCertificado\nMédico'}"
								   labelFunction="{Util.labelFunctionDate}"
								   dataField="fechaVencimientoCertificadoMedico"
								   width="120"/>
				<mx:DataGridColumn id="dtgRecruitmentType" headerText="{'Tipo de\nContratación'}"
								   dataField="tipoContratacion.tipo"
								   width="120"
								   />
				<mx:DataGridColumn id="dtgContractType" headerText="{'Tipo de\nContrato'}"
								   dataField="tipoContrato.tipo"
								   width="100"
								   />
				<mx:DataGridColumn headerText="{'Vencimiento\ndel Contrato\nEventual'}"
								   dataField="vencimientoContratoEventual"
								   width="200"
								   />
				<mx:DataGridColumn id="dtgContractStartDate" headerText="{'Fecha Inicio\nde Contrato'}"
								   labelFunction="{Util.labelFunctionDate}"
								   dataField="fechaInicioContrato"
								   width="120"/>
				<mx:DataGridColumn headerText="{'Seguro\nSocial'}" width="80" textAlign="center">
					<mx:itemRenderer>
						<mx:Component>
							<mx:CheckBox selected="{data.prestaciones.seguroSocial}" enabled="false"/>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{'Vacaciones'}" width="80" editable="false" textAlign="center">
					<mx:itemRenderer>
						<mx:Component>
							<mx:CheckBox selected="{data.prestaciones.vacaciones}" enabled="false"/>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{'Aguinaldo'}" width="80" editable="false" textAlign="center">
					<mx:itemRenderer>
						<mx:Component>
							<mx:CheckBox selected="{data.prestaciones.seguroSocial}" enabled="false"/>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{'Utilidades'}" width="80" editable="false" textAlign="center">
					<mx:itemRenderer>
						<mx:Component>
							<mx:CheckBox selected="{data.prestaciones.utilidades}" enabled="false"/>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{'Fonacot'}" width="80" editable="false" textAlign="center">
					<mx:itemRenderer>
						<mx:Component>
							<mx:CheckBox selected="{data.prestaciones.fonacot}" enabled="false"/>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{'Infonavit'}" width="80" editable="false" textAlign="center">
					<mx:itemRenderer>
						<mx:Component>
							<mx:CheckBox selected="{data.prestaciones.infonavit}" enabled="false"/>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{'25% Prima\nVacacional'}" width="80" editable="false" textAlign="center">
					<mx:itemRenderer>
						<mx:Component>
							<mx:CheckBox selected="{data.prestaciones.primaVacacional}" enabled="false"/>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{'Suspensión'}"
								   dataField="suspension.suspension"
								   width="150"
								   />
				<mx:DataGridColumn headerText="{'Motivo de\nla Suspensión'}"
								   dataField="motivoSuspension"
								   width="250"
								   />
				<mx:DataGridColumn headerText="{'Fecha de\nTérmino\nde Contrato'}"
								   labelFunction="{Util.labelFunctionDate}"
								   dataField="fechaTerminoContrato"
								   width="120"/>
				<mx:DataGridColumn headerText="{'Motivo de\nTérmino de\nContrato'}"
								   dataField="motivoTerminoContrato"
								   width="250"
								   />
				<mx:DataGridColumn headerText="{'Finiquito'}" width="80" editable="false" textAlign="center">
					<mx:itemRenderer>
						<mx:Component>
							<mx:CheckBox selected="{data.finiquito}" enabled="false"/>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{'Indemnización'}" width="80" editable="false" textAlign="center">
					<mx:itemRenderer>
						<mx:Component>
							<mx:CheckBox selected="{data.indemnizacion}" enabled="false"/>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
	</mx:HBox>
	<mx:HBox>
		<mx:Button id="btnDelete" label="Eliminar" click="btnDelete_clickHandler(event)"
				   visible="{!this._readMode}"/>
		<components:ExportButton datagrid="{this.datagrid}" visible="{!this._readMode}"/>
	</mx:HBox>
	<mx:RemoteObject id="contratacionService" destination="contratacionService" fault="contratacionService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:CallResponder id="responseGetAll" result="responseGetAll_resultHandler(event)"/>
	<mx:CallResponder id="responseGetProyecto" result="responseGetItem_resultHandler(event)"/>
	<mx:CallResponder id="responseDeleteItems" result="responseDeleteItems_resultHandler(event)"/>
</mx:VBox>