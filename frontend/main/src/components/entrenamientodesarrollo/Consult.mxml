<?xml version="1.0" encoding="ISO-8859-1"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
		 label="Consulta"
		 horizontalAlign="right"
		 creationComplete="creationCompleteHandler(event)" xmlns:components="components.*">
	<mx:Script>
		<![CDATA[
			import events.GenericEvent;
			
			import model.ConfiguracionPruebaEntrega;
			import model.DatosGeneralesSolicitante;
			import model.FiltroProyecto;
			import model.Proyecto;
			import model.Curso;
			import model.Util;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var items:ArrayCollection = null;
			
			private var configuracionPruebaEntrega:ConfiguracionPruebaEntrega;
			[Bindable]
			private var _readMode:Boolean = false;
			
			public function set readMode(value:Boolean):void{
				this._readMode = value;
			}
			
			protected function responseGetAll_resultHandler(event:ResultEvent):void
			{
				items = event.result as ArrayCollection;
			}
			
			protected function cursoService_faultHandler(event:FaultEvent):void
			{
				Util.showErrorMessage( Util.splitException( event.fault.faultString ) );
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				this.executeQuery();
			}
			
			protected function datagrid_doubleClickHandler(event:MouseEvent):void
			{
				if( event.currentTarget.selectedItem == null ){
					return;
				}
				var item:Curso = this.datagrid.selectedItem as Curso;
				this.responseGetProyecto.token = this.cursoService.getItem( item.id );
			}
			
			protected function responseGetItem_resultHandler(event:ResultEvent):void
			{
				var item:Curso = event.result as Curso;
				if( item == null ){
					return;
				}
				var genericEvent:GenericEvent = new GenericEvent("itemDetail");
				genericEvent.information = item;
				this.dispatchEvent( genericEvent );
			}
			
			public function executeQuery():void
			{
				this.responseGetAll.token = this.cursoService.getAll();
			}
			
			private function labelFunctionDate(object:Object, column:DataGridColumn):String{
				return Util.formatDateToString( object[column.dataField] );
			}
			
			private function labelFunctionIDProyecto(item:Object, column:DataGridColumn):String{
				return Util.getIDConectelFormat( Util.extractObject(item, column.dataField) );
			}
			
			protected function btnDelete_clickHandler(event:MouseEvent):void
			{
				if( this.datagrid.selectedItems == null ||
					this.datagrid.selectedItems.length == 0 ){
					Util.showErrorMessage("Debe seleccionar elementos de la tabla.");
					return;
				}
				Alert.show("Confirme si desea eliminar los elementos.","Advertencia",Alert.YES+Alert.NO,this, deleteItems);
			}
			
			private function deleteItems(event:CloseEvent):void
			{
				if( event.detail == Alert.NO ){
					return;
				}
				var items:ArrayCollection = Util.selectedIDs( this.datagrid.selectedItems ); 
				this.responseDeleteItems.token = this.cursoService.deleteItems( items );
			}
			
			protected function responseDeleteItems_resultHandler(event:ResultEvent):void
			{
				this.executeQuery();
			}
			
			private function labelFunctionNombre( item:Object, column:DataGridColumn ):String{
				var curso:Curso = item as Curso;
				if( curso == null ||
					curso.contratacion == null ||
					curso.contratacion.seleccionSolicitudEmpleo == null ||
					curso.contratacion.seleccionSolicitudEmpleo.reclutamientoSolicitudEmpleo == null ||
					curso.contratacion.seleccionSolicitudEmpleo.reclutamientoSolicitudEmpleo.datosGeneralesSolicitante == null ){
					return "";
				}else{
					var datosGenerales:DatosGeneralesSolicitante = curso.contratacion.seleccionSolicitudEmpleo.reclutamientoSolicitudEmpleo.datosGeneralesSolicitante;
					return datosGenerales.apellidoPaterno + " " + datosGenerales.nombres;
				}
			}
		]]>
	</mx:Script>
	<mx:Metadata>
		[Event(name="itemDetail", type="events.GenericEvent")]
	</mx:Metadata>
	<mx:HBox width="{Util.getGrandParentWidthLess(this)}" height="100%">
		<mx:DataGrid id="datagrid" width="2230" height="100%" dataProvider="{items}"
					 doubleClickEnabled="true" doubleClick="datagrid_doubleClickHandler(event)"
					 allowMultipleSelection="true"
					 >
			<mx:columns>
				<mx:DataGridColumn id="dtgID" headerText="ID"
								   dataField="id"
								   width="60"
								   textAlign="right"/>
				<mx:DataGridColumn id="dtgName" headerText="{'Nombre'}"
								   labelFunction="labelFunctionNombre"
								   width="200"/>
				<mx:DataGridColumn id="dtgPosition" headerText="{'Puesto'}"
								   dataField="contratacion.seleccionSolicitudEmpleo.reclutamientoSolicitudEmpleo.datosPrincipalesSolicitante.puestoSolicitado"
								   width="100"/>
				<mx:DataGridColumn headerText="{'Inducción'}" width="80"
								   imeMode="induccion1"
								   itemRenderer="components.renderers.CheckBoxRendererInduccion"/>
				<mx:DataGridColumn headerText="{'ISO\n9001-2008'}" width="80"
								   imeMode="induccion2"
								   itemRenderer="components.renderers.CheckBoxRendererISO90012008"/>
				<mx:DataGridColumn headerText="{'ISO\n14001-2004'}" width="80"
								   imeMode="induccion3"
								   itemRenderer="components.renderers.CheckBoxRendererISO140012004"/>
				<mx:DataGridColumn headerText="{'OHSAS\n18001-2008'}" width="80"
								   imeMode="induccion4"
								   itemRenderer="components.renderers.CheckBoxRendererOHSAS180012008"/>
				<mx:DataGridColumn id="dtgENCDate" headerText="{'Fecha\nEvaluación de\nNecesidades\nde\nCompetencia'}"
								   dataField="fechaEnc"
								   labelFunction="{Util.labelFunctionDate}"
								   width="90"/>
				<mx:DataGridColumn id="dtgENCGrade" headerText="{'Resultado\nInducción'}"
								   dataField="resultadoEnc"
								   textAlign="right"
								   width="80"/>
				<mx:DataGridColumn headerText="{'Evaluación\nde\nNecesidades\nde\nCompetencia'}" width="100"
								   imeMode="fechaEnc"
								   itemRenderer="components.renderers.CheckBoxRendererEvaluacion"/>
				<mx:DataGridColumn id="dtgTechnicalCourse" headerText="{'Curso\nTécnico'}"
								   dataField="cursoTecnico"
								   width="100"/>
				<mx:DataGridColumn headerText="{'Capacitador\nInterno\nCurso\nTécnico'}"
								   dataField="capacitadorInternoCt"
								   width="150"/>
				<mx:DataGridColumn headerText="{'Capacitador\nExterno\nCurso\nTécnico'}"
								   dataField="capacitadorExternoCt"
								   width="150"/>
				<mx:DataGridColumn headerText="{'Autorización\nCurso\nTécnico'}" width="80"
								   imeMode="autorizacionCt"
								   itemRenderer="components.renderers.CheckBoxRendererAutorizacionCursoTecnico"/>
				<mx:DataGridColumn id="dtgTechnicalCourseDate" headerText="{'Fecha\nCurso\nTécnico'}"
								   dataField="fechaCt"
								   labelFunction="{Util.labelFunctionDate}"
								   width="80"/>
				<mx:DataGridColumn id="dtgTechnicalCourseGrade" headerText="{'Resultado\nCurso\nTécnico'}"
								   dataField="resultadoCt"
								   textAlign="right"
								   width="80"/>
				<mx:DataGridColumn id="dtgGeneralCourse" headerText="{'Curso\nGeneral'}"
								   dataField="cursoGeneral"
								   width="100"/>
				<mx:DataGridColumn headerText="{'Capacitador\nInterno\nCurso\nGeneral'}"
								   dataField="capacitadorInternoCg"
								   width="150"/>
				<mx:DataGridColumn headerText="{'Capacitador\nExterno\nCurso\nGeneral'}"
								   dataField="capacitadorExternoCg"
								   width="150"/>
				<mx:DataGridColumn headerText="{'Autorización\nCurso\nGeneral'}" width="80"
								   imeMode="autorizacionCg"
								   itemRenderer="components.renderers.CheckBoxRendererAutorizacionCursoGeneral"/>
				<mx:DataGridColumn id="dtgGeneralCourseDate" headerText="{'Fecha\nCurso\nGeneral'}"
								   dataField="fechaCg"
								   labelFunction="{Util.labelFunctionDate}"
								   width="80"/>
				<mx:DataGridColumn id="dtgGeneralCourseGrade" headerText="{'Resultado\nCurso\nGeneral'}"
								   dataField="resultadoCg"
								   textAlign="right"
								   width="80"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:HBox>
	<mx:HBox>
		<mx:Button id="btnDelete" label="Eliminar" click="btnDelete_clickHandler(event)"
				   visible="{!this._readMode}"/>
		<components:ExportButton datagrid="{this.datagrid}" visible="{!this._readMode}"/>
	</mx:HBox>
	<mx:RemoteObject id="cursoService" destination="cursoService" fault="cursoService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:CallResponder id="responseGetAll" result="responseGetAll_resultHandler(event)"/>
	<mx:CallResponder id="responseGetProyecto" result="responseGetItem_resultHandler(event)"/>
	<mx:CallResponder id="responseDeleteItems" result="responseDeleteItems_resultHandler(event)"/>
</mx:VBox>