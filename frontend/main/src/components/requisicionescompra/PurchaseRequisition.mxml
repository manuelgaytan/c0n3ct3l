<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:components="components.*"
		 creationComplete="creationCompleteHandler(event)" xmlns:requisicionescompra="components.requisicionescompra.*"
		 >
	<mx:Script>
		<![CDATA[
			import components.equiposmedicion.Consult;
			import components.equipostransporte.Consult;
			import components.hardware.Consult;
			import components.herramientas.Consult;
			import components.materiales.Consult;
			import components.software.Consult;
			import components.solicitudalmacen.Consult;
			import components.telefoniamovil.Consult;
			
			import model.AreaSolicitante;
			import model.Catalogo;
			import model.Colaborador;
			import model.Constants;
			import model.EstatusRequisicionCompra;
			import model.Perfil;
			import model.Prioridad;
			import model.RequisicionCompra;
			import model.TipoAlmacen;
			import model.TipoMantenimiento;
			import model.Util;
			
			import mx.collections.ArrayCollection;
			import mx.com.gahm.componentes.validadores.InicializaValidadoresEtiquetas;
			import mx.com.gahm.componentes.validadores.ValidadorAlfabetico;
			import mx.com.gahm.componentes.validadores.ValidadorAlfanumerico;
			import mx.com.gahm.componentes.validadores.ValidadorDecimal;
			import mx.com.gahm.componentes.validadores.ValidadorNumerico;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.object_proxy;
			
			private var mode:String = null;
			private var _item:RequisicionCompra;
			private var validators:InicializaValidadoresEtiquetas;
			
			public function set registrer(value:Boolean):void{
				mode = Constants.REGISTER_MODE;
				this.label = Constants.REGISTRAR;
			}
			
			public function set update(value:Boolean):void{
				mode = Constants.UPDATE_MODE;
				this.label = Constants.MODIFICAR;
			}
			
			public function set enabledComponents(value:Boolean):void{
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				this.modeValidation();
				this.initializeValidators();
				this.fillCombos();
			}
			
			public function set purchaseRequisition(value:RequisicionCompra):void{
				if( value == null ){
					return;
				}
				this._item = value;
				this.setPurchaseRequisition(); 
			}
			
			private function setPurchaseRequisition():void
			{
				if( this._item == null ){
					return;
				}
				this.txtID.text = this._item.id;
				this.dtfApplicationDate.selectedDate = this._item.fechaSolicitud;
				this.txtReason.text = this._item.motivo;
				if( Util.isFill( this.cmbPriority ) && this._item.prioridad != null ){
					this.cmbPriority.selectedIndex = Util.selectedIndexFromCombo( this.cmbPriority.dataProvider as ArrayCollection, 
						this._item.prioridad.id);
				}
				this.cmbApplicantsNames.list = this._item.solicitantesRequisicion;
				if( Util.isFill( this.cmbApplicantArea ) && this._item.areaSolicitante != null ){
					this.cmbApplicantArea.selectedIndex = Util.selectedIndexFromCombo( this.cmbApplicantArea.dataProvider as ArrayCollection, 
						this._item.areaSolicitante.id);
				}
				this.txtSite.text = this._item.centralSitio;
				this.itemsManagement.dataProvider = this._item.partidasReqisicionCompra;
				if( Util.isFill( this.cmbStatus ) && this._item.estatusRequisicionCompra != null ){
					this.cmbStatus.selectedIndex = Util.selectedIndexFromCombo( this.cmbStatus.dataProvider as ArrayCollection, 
						this._item.estatusRequisicionCompra.id);
				}		
				this.comments.comments = this._item.comentariosRequisicion;
			}
			
			private function getPurchaseRequisition():RequisicionCompra{
				var item:RequisicionCompra = null;
				if( this.mode == Constants.REGISTER_MODE ){
					item = new RequisicionCompra();
				}else{
					item = this._item;
				}
				item.fechaSolicitud= this.dtfApplicationDate.selectedDate;
				item.motivo= Util.validateEmpty( this.txtReason.text );
				item.prioridad = Util.validateCombo( this.cmbPriority ) as Prioridad;
				item.solicitantesRequisicion = this.cmbApplicantsNames.list;
				item.centralSitio = Util.validateEmpty( this.txtSite.text );
				item.partidasReqisicionCompra = this.itemsManagement.dataProvider as ArrayCollection;
				item.estatusRequisicionCompra = Util.validateCombo( this.cmbStatus ) as EstatusRequisicionCompra;
				item.comentariosRequisicion = this.comments.comments;
				return item;
			}
			
			private function fillCombos():void
			{
				this.responseGetPrioridad.token = this.catalogoService.getPrioridad();
				this.responseGetColaborador.token = this.catalogoService.getColaborador();
				this.responseGetAreaSolicitante.token = this.catalogoService.getAreaSolicitante();
				this.responseGetAlmacen.token = this.catalogoService.getTipoAlmacen();
				this.responseGetEstatusRequisicionCompra.token = this.catalogoService.getEstadoRequiscionCompra();
				
			}
			
			protected function responseGetPrioridad_resultHandler(event:ResultEvent):void
			{
				var data:ArrayCollection = event.result as ArrayCollection;
				if( data == null ){
					return;
				}
				this.cmbPriority.dataProvider = Util.addEmptyCatalgo( data );
				if( this._item != null && this._item.prioridad != null ){
					this.cmbPriority.selectedIndex = Util.selectedIndexFromCombo( this.cmbPriority.dataProvider as ArrayCollection, 
						this._item.prioridad.id);
				}
			}
			
			protected function requisicionService_faultHandler(event:FaultEvent):void
			{
				Util.showErrorMessage( Util.splitException( event.fault.faultString ) );
			}
			
			protected function btnAccept_clickHandler(event:MouseEvent):void
			{
				if( !this.validations() ){
					Util.showMessageVerifyFields();
					return;
				}
				if( this.mode == Constants.REGISTER_MODE ){
					var purchaseRequisition:RequisicionCompra = this.getPurchaseRequisition();
					Util.showProperties( purchaseRequisition );
					this.responseSave.token = this.requisicionService.save( purchaseRequisition );
				}
				if( this.mode == Constants.UPDATE_MODE ){
					Alert.show("Confirme si desea actualizar el elemento.","Advertencia",Alert.YES+Alert.NO,this, updateItem);
				}
			}
			
			private function updateItem(event:CloseEvent):void{
				if( event.detail == Alert.NO ){
					return;
				}
				var purchaseRequisition:RequisicionCompra = this.getPurchaseRequisition();
				Util.showProperties( purchaseRequisition );
				this.responseUpdate.token = this.requisicionService.update( purchaseRequisition );
			}
			
			private function validations():Boolean
			{
				var value:Boolean = true;
				value &&= this.validators.validarFormulario();
				return value;
			}
			
			private function modeValidation():void
			{
				if( this.mode == Constants.REGISTER_MODE ){
					form.removeChild( this.frmID );
				}
			}
			
			private function initializeValidators():void
			{
				this.validators = new InicializaValidadoresEtiquetas();
				validators.crearValidadorRestrictor("generic",ValidadorAlfanumerico.nombre, 0, 255, true);
				validators.setRestrictor(txtReason, "generic");
				validators.setRestrictor(txtSite, "generic");
			}
			
			protected function responseSave_resultHandler(event:ResultEvent):void
			{
				var eventPurchaseRequisitionNew:Event = new Event("purchaseRequisitionNew");
				this.dispatchEvent( eventPurchaseRequisitionNew );
				this.cleanForm();
			}
			
			private function cleanForm():void
			{
				this.txtID.reset();
				this.dtfApplicationDate.reset();
				this.txtReason.reset();
				this.cmbPriority.selectedIndex = 0;
				this.cmbApplicantArea.selectedIndex = 0;
				this.cmbApplicantArea.selectedIndex = 0;
				this.txtSite.reset();
				this.cmbProduct.selectedIndex = 0;
				this.dtgProducts.doubleClickEnabled = true;
				this.chkOthres.selected = false;
				Util.removeItems(this.dtgProducts.dataProvider);
				this.txtCode.reset();
				this.txtFamily.reset();
				this.txtDescription.reset();
				this.txtQuantity.reset();
				this.txtUnit.reset();
				this.txtValidation.reset();
				this.cmbItemStatus.selectedIndex = 0;
				this.cmbStatus.selectedIndex = 0;
				this.comments.reset();
			}
			
			protected function responseUpdate_resultHandler(event:ResultEvent):void
			{
				var eventPurchaseRequisitionUpdated:Event = new Event("purchaseRequisitionUpdated");
				this.dispatchEvent( eventPurchaseRequisitionUpdated );
				this.cleanForm();
			}
			
			protected function responseGetColaborador_resultHandler(event:ResultEvent):void
			{
				var data:ArrayCollection = event.result as ArrayCollection;
				if( data == null ){
					return;
				}
				this.cmbApplicantsNames.comboList = Util.addEmptyCatalgo( data, "nombreCompleto" );
			}
			
			protected function responseGetAreaSolicitante_resultHandler(event:ResultEvent):void
			{
				var data:ArrayCollection = event.result as ArrayCollection;
				if( data == null ){
					return;
				}
				this.cmbApplicantArea.dataProvider = Util.addEmptyCatalgo( data );
			}
			
			protected function responseGetEstatusRequisicionCompra_resultHandler(event:ResultEvent):void
			{
				var data:ArrayCollection = event.result as ArrayCollection;
				if( data == null ){
					return;
				}
				this.cmbStatus.dataProvider = Util.addEmptyCatalgo( data );
				if( this._item != null && this._item.estatusRequisicionCompra != null ){
					this.cmbStatus.selectedIndex = Util.selectedIndexFromCombo( this.cmbStatus.dataProvider as ArrayCollection, 
						this._item.estatusRequisicionCompra.id);
				}
			}
			
			protected function catalogoService_faultHandler(event:FaultEvent):void
			{
				Util.showErrorMessage( Util.splitException( event.fault.faultString ) );
			}
			
			protected function chkOthres_changeHandler(event:Event):void
			{
				var enableNoOthers:Boolean = false;
				if( this.chkOthres.selected ){
					this.txtCode.reset();
					this.txtFamily.reset();
				}
				enableNoOthers = !this.chkOthres.selected;
				this.cmbProduct.enabled = enableNoOthers;
				this.dtgProducts.doubleClickEnabled = enableNoOthers;
			}
			
			protected function cmbProduct_changeHandler(event:ListEvent):void
			{
				var id:* = Util.selectedId(this.cmbProduct);
				if( id == 0 ){
					Util.removeItems( this.dtgProducts.dataProvider );
					//dtgProducts.invalidateDisplayList();
					return;
				}
				switch(id){
					case 1:
						this.responseGetAllAlmacen.token = herramientaService.getAll();
						break;
					case 2:
						this.responseGetAllAlmacen.token = equipoMedicionService.getAll();
						break;
					case 3:
						this.responseGetAllAlmacen.token = equipoTransporteService.getAll();
						break;
					case 4:
						this.responseGetAllAlmacen.token = materialService.getAll();
						break;
					case 5:
						this.responseGetAllAlmacen.token = consumibleService.getAll();
						break;
					case 6:
						this.responseGetAllAlmacen.token = hardwareService.getAll();
						break;
					case 7:
						this.responseGetAllAlmacen.token = softwareService.getAll();
						break;
					case 8:
						this.responseGetAllAlmacen.token = telefoniaMovilService.getAll();
						break;
				}
			}
			
			protected function responseGetAlmacen_resultHandler(event:ResultEvent):void
			{
				var data:ArrayCollection = event.result as ArrayCollection;
				if( data == null ){
					return;
				}
				this.removerSolicitudAlmacen( data );
				this.cmbProduct.dataProvider = Util.addEmptyCatalgo( data );
			}

			private function removerSolicitudAlmacen(data:ArrayCollection):void{
				var item:TipoAlmacen = null; 
				for(var i=0; i<data.length; i++) 
				{
					item = data.getItemAt( i ) as TipoAlmacen;
					if( !(item == null) &&
						item.id == 9 ){
						data.removeItemAt( i );
						break;
					}
				}
			}
			
			protected function responseGetAllAlmacen_resultHandler(event:ResultEvent):void
			{
				var data:ArrayCollection = event.result as ArrayCollection;
				if( data == null ){
					return;
				}
				this.dtgProducts.dataProvider = data;
			}
			
			private function labelFunctionGrupoFamilia(object:Object, column:DataGridColumn):String{
				return this.findGrupoFamilia( object );
			}
			
			private function labelFunctionUnidad(object:Object, column:DataGridColumn):String{
				return this.findUnidad( object );
			}
			
			protected function dtgProducts_doubleClickHandler(event:MouseEvent):void
			{
				var item:Object = this.dtgProducts.selectedItem;
				if( item == null ){
					return;
				}
				this.txtCode.text = Util.extractToText(item,"codigo");
				this.txtFamily.text = this.findGrupoFamilia(item);
				this.txtDescription.text = Util.extractToText(item,"descripcion");
				this.txtUnit.text = this.findUnidad(item);
				
			}
			
			private function findGrupoFamilia(item:Object):String{
				if( item == null ){
					return "";
				}
				var grupoFamilia:String = "";
				if( item.hasOwnProperty("grupoFamilia") ){
					grupoFamilia = item["grupoFamilia"];
				}else if( item.hasOwnProperty("grupoFamiliaA") ){
					grupoFamilia = item["grupoFamiliaA"]["etiqueta"];
				}else if( item.hasOwnProperty("grupoFamiliab") ){
					grupoFamilia = item["grupoFamiliab"]["etiqueta"];
				}else if( item.hasOwnProperty("grupoFamiliaC") ){
					grupoFamilia = item["grupoFamiliaC"]["etiqueta"];
				}else if( item.hasOwnProperty("grupoFamiliaD") ){
					grupoFamilia = item["grupoFamiliaD"]["etiqueta"];
				}else if( item.hasOwnProperty("grupoFamiliaE") ){
					grupoFamilia = item["grupoFamiliaE"]["etiqueta"];
				}else if( item.hasOwnProperty("grupoFamiliaF") ){
					grupoFamilia = item["grupoFamiliaF"]["etiqueta"];
				}
				return grupoFamilia;
			}
			
			private function findUnidad(item:Object):String{
				if( item == null ){
					return "";
				}
				var unidad:String = "";
				if( item.hasOwnProperty("unidad") ){
					unidad = item["unidad"];
				}else if( item.hasOwnProperty("unidadA") ){
					unidad = item["unidadA"]["etiqueta"];
				}else if( item.hasOwnProperty("unidadb") ){
					unidad = item["unidadB"]["etiqueta"];
				}else if( item.hasOwnProperty("unidadC") ){
					unidad = item["unidadC"]["etiqueta"];
				}
				return unidad;
			}
			
		]]>
	</mx:Script>
	<mx:Metadata>
		[Event(name="purchaseRequisitionNew", type="flash.events.Event")]
		[Event(name="purchaseRequisitionUpdated", type="flash.events.Event")]
	</mx:Metadata>
	<mx:Form id="form">
		<mx:FormItem id="frmID" label="Folio:">
			<components:TextInput id="txtID" editable="false"
								  textAlign="right"/>
		</mx:FormItem>
		<mx:FormItem label="Fecha de Solicitud:">
			<components:DateField id="dtfApplicationDate" enabled="false" creationComplete="dtfApplicationDate.selectedDate = new Date()"/>
		</mx:FormItem>
		<mx:FormItem label="Motivo:">
			<components:TextInput id="txtReason"
								  />
		</mx:FormItem>
		<mx:FormItem label="Prioridad:">
			<mx:ComboBox id="cmbPriority"
						 labelField="etiqueta"
						 />
		</mx:FormItem>
		<mx:FormItem label="Nombres de los Solicitantes:">
			<components:ComboList id="cmbApplicantsNames" labelField="nombreCompleto"
						 />
		</mx:FormItem>
		<mx:FormItem label="Área Solicitante:">
			<mx:ComboBox id="cmbApplicantArea"
						 labelField="etiqueta"
						 />
		</mx:FormItem>
		<mx:FormItem label="Central, Sitio u Otro:">
			<components:TextInput id="txtSite"
								  />
		</mx:FormItem>
		<mx:FormItem label="Producto o Servicio Solicitado:" direction="horizontal">
			<mx:ComboBox id="cmbProduct"
						 labelField="etiqueta"
						 change="cmbProduct_changeHandler(event)"
						 />
			<mx:CheckBox id="chkOthres" label="Otros" change="chkOthres_changeHandler(event)"/> 
		</mx:FormItem>
		<mx:DataGrid id="dtgProducts" width="100%" height="250"
					 doubleClickEnabled="true"
					 doubleClick="dtgProducts_doubleClickHandler(event)">
			<mx:columns>
				<mx:DataGridColumn id="dtgCode" headerText="Código"
								   dataField="codigo"
								   width="80"/>
				<mx:DataGridColumn id="dtgFamily" headerText="{'Grupo o\nFamilia'}"
								   width="100"
								   labelFunction="labelFunctionGrupoFamilia"/>
				<mx:DataGridColumn id="dtgDescription" headerText="Descripción"
								   dataField="descripcion"
								   width="160"/>
				<mx:DataGridColumn id="dtgExistence" headerText="Existencia"
								   dataField="existencia"
								   width="60"
								   textAlign="right"/>
				<mx:DataGridColumn id="dtgUnit" headerText="Unidad"
								   width="60"
								   textAlign="right"
								   labelFunction="labelFunctionUnidad"/>
			</mx:columns>
		</mx:DataGrid>
		<mx:FormItem label="Código:">
			<components:TextInput id="txtCode"
								  editable="false"/>
		</mx:FormItem>
		<mx:FormItem label="Grupo o Familia:">
			<components:TextInput id="txtFamily"
								  editable="false"
								  />
		</mx:FormItem>
		<mx:FormItem label="Descripción:">
			<components:TextInput id="txtDescription"
								  width="400"
								  />
		</mx:FormItem>
		<mx:FormItem label="Cantidad:">
			<components:TextInput id="txtQuantity"
								  textAlign="right"
								  width="90"
								  />
		</mx:FormItem>
		<mx:FormItem label="Unidad:">
			<components:TextInput id="txtUnit"
								  width="200"
								  />
		</mx:FormItem>
		<mx:FormItem label="Validación:">
			<components:TextInput id="txtValidation"
								  width="200"
								  />
		</mx:FormItem>
		<mx:FormItem label="Estatus:">
			<mx:ComboBox id="cmbItemStatus"
						 labelField="etiqueta"
						 />
		</mx:FormItem>
		<mx:FormItem>
			<mx:Button id="btnAddItem" label="Agregar Partida"/>
		</mx:FormItem>
		<requisicionescompra:ItemsManagement id="itemsManagement"/>
		<mx:FormItem label="Estatus:">
			<mx:ComboBox id="cmbStatus"
						 labelField="etiqueta"
						 />
		</mx:FormItem>
		<components:Comments id="comments"/>
		<mx:FormItem>
			<mx:Button id="btnAccept" label="Aceptar" click="btnAccept_clickHandler(event)"/>
		</mx:FormItem>
	</mx:Form>
	<mx:RemoteObject id="requisicionService" destination="requisicionService" fault="requisicionService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:CallResponder id="responseSave" result="responseSave_resultHandler(event)"/>
	<mx:CallResponder id="responseUpdate" result="responseUpdate_resultHandler(event)"/>
	<mx:RemoteObject id="catalogoService" destination="catalogoService" fault="catalogoService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:CallResponder id="responseGetPrioridad" result="responseGetPrioridad_resultHandler(event)"/>
	<mx:CallResponder id="responseGetColaborador" result="responseGetColaborador_resultHandler(event)"/>
	<mx:CallResponder id="responseGetAreaSolicitante" result="responseGetAreaSolicitante_resultHandler(event)"/>
	<mx:CallResponder id="responseGetAlmacen" result="responseGetAlmacen_resultHandler(event)"/>
	<mx:CallResponder id="responseGetEstatusRequisicionCompra" result="responseGetEstatusRequisicionCompra_resultHandler(event)"/>
	<mx:RemoteObject id="telefoniaMovilService" destination="telefoniaMovilService" fault="requisicionService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:RemoteObject id="solicitudAlmacenService" destination="solicitudAlmacenService" fault="requisicionService_faultHandler(event)"
					 showBusyCursor="true"/>	
	<mx:RemoteObject id="softwareService" destination="softwareService" fault="requisicionService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:RemoteObject id="materialService" destination="materialService" fault="requisicionService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:RemoteObject id="herramientaService" destination="herramientaService" fault="requisicionService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:RemoteObject id="hardwareService" destination="hardwareService" fault="requisicionService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:RemoteObject id="equipoTransporteService" destination="equipoTransporteService" fault="requisicionService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:RemoteObject id="equipoMedicionService" destination="equipoMedicionService" fault="requisicionService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:RemoteObject id="consumibleService" destination="consumibleService" fault="requisicionService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:CallResponder id="responseGetAllAlmacen" result="responseGetAllAlmacen_resultHandler(event)"/>
</mx:VBox>
