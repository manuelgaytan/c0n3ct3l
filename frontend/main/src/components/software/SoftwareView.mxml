<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:components="components.*"
		 creationComplete="creationCompleteHandler(event)"
		 >
	<mx:Script>
		<![CDATA[
			import model.Catalogo;
			import model.Colaborador;
			import model.Constants;
			import model.EstatusA;
			import model.GrupoFamiliaA;
			import model.Perfil;
			import model.Software;
			import model.TipoAlmacen;
			import model.TipoDocumentoAlmacen;
			import model.TipoMantenimiento;
			import model.UbicacionB;
			import model.UnidadA;
			import model.Util;
			
			import mx.collections.ArrayCollection;
			import mx.com.gahm.componentes.validadores.InicializaValidadoresEtiquetas;
			import mx.com.gahm.componentes.validadores.ValidadorAlfabetico;
			import mx.com.gahm.componentes.validadores.ValidadorAlfanumerico;
			import mx.com.gahm.componentes.validadores.ValidadorDecimal;
			import mx.com.gahm.componentes.validadores.ValidadorNumerico;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.object_proxy;
			
			private var mode:String = null;
			private var _item:Software;
			private var validators:InicializaValidadoresEtiquetas;
			
			public function set registrer(value:Boolean):void{
				mode = Constants.REGISTER_MODE;
				this.label = Constants.REGISTRAR;
			}
			
			public function set update(value:Boolean):void{
				mode = Constants.UPDATE_MODE;
				this.label = Constants.MODIFICAR;
			}
			
			public function set enabledComponents(value:Boolean):void{
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				this.modeValidation();
				this.initializeValidators();
				this.fillCombos();
			}
			
			public function set software(value:Software):void{
				if( value == null ){
					return;
				}
				this.cleanForm();
				this._item = value;
				this.setSoftware(); 
			}
			
			private function setSoftware():void
			{
				if( this._item == null ){
					return;
				}
				this.txtCode.text = this._item.codigo;
				this.txtDescription.text = this._item.descripcion;
				this.txtSerie.text = this._item.noSerie;
				this.dlvWarranty.delivers = Util.setDocumentosAlmacen( this._item.polizaGarantia );
				this.dlvInsurance.delivers = Util.setDocumentosAlmacen( this._item.polizaSeguro );
				this.txtExistence.text = Util.numberToString( this._item.existencia );
				this.txtUnit.text = this._item.unidad;
				this.txtCost.text = Util.numberToString( this._item.costo );
				if( Util.isFill( this.cmbLocation ) && this._item.ubicacionB != null ){
					this.cmbLocation.selectedIndex = Util.selectedIndexFromCombo( this.cmbLocation.dataProvider as ArrayCollection, 
						this._item.ubicacionB.id);
				}
				if( Util.isFill( this.cmbResponsible ) && this._item.responsable != null ){
					this.cmbResponsible.selectedIndex = Util.selectedIndexFromCombo( this.cmbResponsible.dataProvider as ArrayCollection, 
						this._item.responsable.id);
				}
				this.dtfInitialLicensing.selectedDate = this._item.licenciamientoInicial;
				this.dtfFinalLicensing.selectedDate = this._item.licenciamientoFinal;
				this.comments.comments = this._item.comentarios;
			}
			
			private function getSoftware():Software{
				var item:Software = null;
				if( this.mode == Constants.REGISTER_MODE ){
					item = new Software();
				}else{
					item = this._item;
				}
				item.tipoAlmacen = TipoAlmacen.getSoftware();
				item.fkTipoAlmacen = Util.extractId(item.tipoAlmacen);
				item.codigo = Util.validateEmpty( this.txtCode.text );
				item.descripcion = Util.validateEmpty( this.txtDescription.text );
				item.noSerie = Util.validateEmpty( this.txtSerie.text );
				item.polizaSeguro = Util.getDocumentosAlmacen( this.dlvInsurance.delivers, TipoAlmacen.getSoftware(), TipoDocumentoAlmacen.getPolizaSeguro() );
				item.polizaGarantia = Util.getDocumentosAlmacen( this.dlvWarranty.delivers, TipoAlmacen.getSoftware(), TipoDocumentoAlmacen.getPolizaGarantia() );
				item.existencia = Util.stringToNumber( this.txtExistence.text );
				item.costo = Util.stringToNumber( this.txtCost.text );
				item.unidad = Util.validateEmpty( this.txtUnit.text );
				item.ubicacionB = Util.validateCombo( this.cmbLocation ) as UbicacionB;
				item.fkUbicacionB = Util.extractId(item.ubicacionB);
				item.responsable = Util.validateCombo( this.cmbResponsible ) as Colaborador;
				item.fkResponsable = Util.extractId(item.responsable);
				item.licenciamientoInicial = this.dtfInitialLicensing.selectedDate;
				item.licenciamientoFinal = this.dtfFinalLicensing.selectedDate;
				item.comentarios = Util.getComentariosTipoAlmacen( this.comments.comments, TipoAlmacen.getSoftware() );
				return item;
			}
			
			private function fillCombos():void
			{
				this.responseGetUbicacionB.token = this.catalogoService.getUbicacionB();
				this.responseGetColaborador.token = this.catalogoService.getColaborador();
			}
			
			protected function softwareService_faultHandler(event:FaultEvent):void
			{
				Util.showErrorMessage( Util.splitException( event.fault.faultString ) );
			}
			
			protected function btnAccept_clickHandler(event:MouseEvent):void
			{
				if( !this.validations() ){
					Util.showMessageVerifyFields();
					return;
				}
				if( this.mode == Constants.REGISTER_MODE ){
					var software:Software = this.getSoftware();
					Util.showProperties( software );
					this.responseSave.token = this.softwareService.save( software );
				}
				if( this.mode == Constants.UPDATE_MODE ){
					Alert.show("Confirme si desea actualizar el elemento.","Advertencia",Alert.YES+Alert.NO,this, updateItem);
				}
			}
			
			private function updateItem(event:CloseEvent):void{
				if( event.detail == Alert.NO ){
					return;
				}
				var software:Software = this.getSoftware();
				Util.showProperties( software );
				this.responseUpdate.token = this.softwareService.update( software );
			}
			
			private function validations():Boolean
			{
				var value:Boolean = true;
				value &&= this.validators.validarFormulario();
				value &&= this.dtfInitialLicensing.selectedDate != null;
				value &&= this.dtfFinalLicensing.selectedDate != null;
				return value;
			}
			
			private function modeValidation():void
			{
			}
			
			private function initializeValidators():void
			{
				this.validators = new InicializaValidadoresEtiquetas();
				validators.crearValidadorRestrictor("generic",ValidadorAlfanumerico.nombre, 0, 255, true);
				validators.setValidador(txtCode, "generic");
				validators.setValidador(txtDescription, "generic");
				validators.setValidador(txtSerie, "generic");
				validators.setRestrictor(txtUnit, "generic");
				validators.crearValidadorRestrictor("number",ValidadorDecimal.nombre, 10, 4);
				validators.setValidador(txtExistence, "number");
			}
			
			protected function responseSave_resultHandler(event:ResultEvent):void
			{
				var eventSoftwareNew:Event = new Event("softwareNew");
				this.dispatchEvent( eventSoftwareNew );
				this.cleanForm();
			}
			
			private function cleanForm():void
			{
				Util.upScroll( this );
				this.txtCode.reset();
				this.txtDescription.reset();
				this.txtSerie.reset();
				this.dlvWarranty.reset();
				this.dlvInsurance.reset();
				this.txtExistence.reset();
				this.txtCost.reset();
				this.txtUnit.reset();
				this.cmbLocation.selectedIndex = 0;
				this.cmbResponsible.selectedIndex = 0;
				this.dtfInitialLicensing.reset();
				this.dtfFinalLicensing.reset();
				this.comments.reset();
			}
			
			protected function responseUpdate_resultHandler(event:ResultEvent):void
			{
				var eventSoftwareUpdated:Event = new Event("softwareUpdated");
				this.dispatchEvent( eventSoftwareUpdated );
				this.cleanForm();
			}
			
			protected function responseGetUbicacionB_resultHandler(event:ResultEvent):void
			{
				var data:ArrayCollection = event.result as ArrayCollection;
				if( data == null ){
					return;
				}
				this.cmbLocation.dataProvider = data;//Util.addEmptyCatalgo( data );
				if( this._item != null && this._item.ubicacionB != null ){
					this.cmbLocation.selectedIndex = Util.selectedIndexFromCombo( this.cmbLocation.dataProvider as ArrayCollection, 
						this._item.ubicacionB.id);
				}
			}
			
			protected function responseGetColaborador_resultHandler(event:ResultEvent):void
			{
				var data:ArrayCollection = event.result as ArrayCollection;
				if( data == null ){
					return;
				}
				this.cmbResponsible.dataProvider = data;//Util.addEmptyCatalgo( data, "nombreCompleto" );
				if( this._item != null && this._item.responsable != null ){
					this.cmbResponsible.selectedIndex = Util.selectedIndexFromCombo( this.cmbResponsible.dataProvider as ArrayCollection, 
						this._item.responsable.id);
				}
			}
			
			protected function catalogoService_faultHandler(event:FaultEvent):void
			{
				Util.showErrorMessage( Util.splitException( event.fault.faultString ) );
			}
			
		]]>
	</mx:Script>
	<mx:Metadata>
		[Event(name="softwareNew", type="flash.events.Event")]
		[Event(name="softwareUpdated", type="flash.events.Event")]
	</mx:Metadata>
	<mx:Form id="form">
		<mx:FormItem label="Código:">
			<components:TextInput id="txtCode"/>
		</mx:FormItem>
		<mx:FormItem label="Descripción:">
			<components:TextInput id="txtDescription" width="400"/>
		</mx:FormItem>
		<mx:FormItem label="No. de Serie:">
			<components:TextInput id="txtSerie"
								  />
		</mx:FormItem>
		<mx:FormItem label="Poliza de Garantía:">
			<components:FlatDeliver id="dlvWarranty"/>
		</mx:FormItem>
		<mx:FormItem label="Poliza de Seguro:">
			<components:FlatDeliver id="dlvInsurance"/>
		</mx:FormItem>
		<mx:FormItem label="Existencia:">
			<components:TextInput id="txtExistence"
								  textAlign="right"/>
		</mx:FormItem>
		<mx:FormItem label="Unidad:">
			<components:TextInput id="txtUnit"/>
		</mx:FormItem>
		<mx:FormItem label="Ubicación:">
			<mx:ComboBox id="cmbLocation"
						 labelField="etiqueta"
						 />
		</mx:FormItem>
		<mx:FormItem label="Responsable:">
			<mx:ComboBox id="cmbResponsible"
						 labelField="nombreCompleto"
						 />
		</mx:FormItem>
		<mx:FormItem label="Licenciamiento Inicio:">
			<components:DateField id="dtfInitialLicensing"/>
		</mx:FormItem>
		<mx:FormItem label="Licenciamiento Final:">
			<components:DateField id="dtfFinalLicensing"/>
		</mx:FormItem>
		<mx:FormItem label="Costo:">
			<components:TextInput id="txtCost"
								  textAlign="right"/>
		</mx:FormItem>
		<components:Comments id="comments"/>
		<mx:FormItem>
			<mx:Button id="btnAccept" label="Aceptar" click="btnAccept_clickHandler(event)"/>
		</mx:FormItem>
	</mx:Form>
	<mx:RemoteObject id="softwareService" destination="softwareService" fault="softwareService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:CallResponder id="responseSave" result="responseSave_resultHandler(event)"/>
	<mx:CallResponder id="responseUpdate" result="responseUpdate_resultHandler(event)"/>
	<mx:RemoteObject id="catalogoService" destination="catalogoService" fault="catalogoService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:CallResponder id="responseGetUbicacionB" result="responseGetUbicacionB_resultHandler(event)"/>
	<mx:CallResponder id="responseGetColaborador" result="responseGetColaborador_resultHandler(event)"/>
</mx:VBox>
