<?xml version="1.0" encoding="ISO-8859-1"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
		 label="Consulta Facturación Proyectos"
		 horizontalAlign="right"
		 creationComplete="creationCompleteHandler(event)">
	<mx:Script>
		<![CDATA[
			import model.EstadisticaPersonal;
			import model.RangoEstadisticaPersonal;
			import model.Util;
			
			import mx.charts.HitData;
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.graphics.SolidColor;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			private var dataEje:ArrayCollection = null;
			
			[Bindable]
			private var warmColorsArray:Array = new Array(
				new SolidColor(0x143AFF, .5), 
				new SolidColor(0x09FF27, .5), 
				new SolidColor(0xFFEA0F, .5),
				new SolidColor(0xFF0000, .5)
			);
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				this.fillCombos();
			}
			
			private function fillCombos():void{
				this.responseGetRangoEstadisticaPersonal.token = this.catalogoService.getRangoEstadisticaPersonal();
			}
			
			protected function btnRefresh_clickHandler(event:MouseEvent):void
			{
				this.fillCombos();
				projectsColumnChart.visible = false;
			}
			
			protected function responseGetAll_resultHandler(event:ResultEvent):void
			{
				if( event == null ||
					event.result == null ||
					!(event.result is ArrayCollection) ){
					return;
				}
				var data:ArrayCollection = event.result as ArrayCollection;
				this.showGraphic( data );
			}
				
			private function showGraphic( data:ArrayCollection ):void{
				projectsColumnChart.dataProvider = data;
				projectsColumnChart.visible = true;
			}
			
			protected function graficoService_faultHandler(event:FaultEvent):void
			{
				Util.showErrorMessage( Util.splitException( event.fault.faultString ) );
			}
			
			public function set personalStadistic(value:EstadisticaPersonal):void{
				if( value == null ){
					return;
				}
				this.showGraphic( this.convertToArrayCollection( value ) );	
			}
			
			private function convertToArrayCollection( personalStadistic:EstadisticaPersonal ):ArrayCollection{
				var ranges:ArrayCollection = null;
				if( personalStadistic == null ){
					return ranges;
				}
				ranges = new ArrayCollection();
				var range:RangoEstadisticaPersonal = null;
				range = new RangoEstadisticaPersonal();
				range.id = personalStadistic.rangoEstadisticaPersonalAusencia.id;
				range.rango = "Ausencia";
				ranges.addItem( range );
				range = new RangoEstadisticaPersonal();
				range.id = personalStadistic.rangoEstadisticaPersonalPuntualidad.id;
				range.rango = "Puntualidad";
				ranges.addItem( range );
				range = new RangoEstadisticaPersonal();
				range.id = personalStadistic.rangoEstadisticaPersonalRotacion.id;
				range.rango = "Rotación";
				ranges.addItem( range );
				range = new RangoEstadisticaPersonal();
				range.id = personalStadistic.rangoEstadisticaPersonalRetardo.id;
				range.rango = "Retardo";
				ranges.addItem( range );
				return ranges;
			}
			
			private function ejeVertical(item:Object, ar2:Number, eje:LinearAxis):String{
				var index:Number = item as Number;
				if( isNaN( index ) ){
					return "";
				}
				if( index == 0 ||
					this.dataEje == null ||
					this.dataEje.length < index ||
					this.dataEje[ (index - 1 )] == null ){
					return "";
				}
				return (this.dataEje[ ( index - 1 ) ] as RangoEstadisticaPersonal).rango;
			}
			
			protected function responseGetRangoEstadisticaPersonal_resultHandler(event:ResultEvent):void
			{
				if( event == null ||
					event.result == null ){
					return;
				}
				this.dataEje = event.result as ArrayCollection;
			}
			
			private function dataTipFunction(item:HitData):String{
				return "<B>" + item.chartItem.item["rango"] + "</B>";
						
			}
			
		]]>
	</mx:Script>
	<mx:Panel title="Gráfico de Columnas, que expone la Estadística del Personas por Trimestre"
			  width="100%" height="100%">
		<mx:ColumnChart id="projectsColumnChart" showDataTips="true"
						width="100%" height="100%"
						creationCompleteEffect="{fadeEffect}"
						showEffect="{zoomEffect}"
						dataTipFunction="dataTipFunction">
			<mx:series>
				<mx:ColumnSeries yField="id" displayName="Rangos"
								 fills="{warmColorsArray}"/>				
			</mx:series>
			<mx:verticalAxis>
				<mx:LinearAxis labelFunction="ejeVertical"/>
			</mx:verticalAxis>
			<mx:horizontalAxis>
				<mx:CategoryAxis categoryField="rango"/>
			</mx:horizontalAxis>
		</mx:ColumnChart>
		<mx:Legend dataProvider="{projectsColumnChart}"/>
		<mx:ControlBar>
			<mx:Button id="btnRefresh" label="Refrescar" click="btnRefresh_clickHandler(event)"/>
		</mx:ControlBar>
	</mx:Panel>
	<mx:Fade id="fadeEffect" duration="3000" alphaFrom="0" alphaTo="1"/>
	<mx:Zoom id="zoomEffect" duration="3000" zoomHeightFrom="0" zoomHeightTo="1"
			 								 />
	<mx:RemoteObject id="graficoService" destination="graficoService" fault="graficoService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:CallResponder id="responseGetAll" result="responseGetAll_resultHandler(event)"/>
	<mx:RemoteObject id="catalogoService" destination="catalogoService" fault="graficoService_faultHandler(event)"
					 showBusyCursor="true"/>
	<mx:CallResponder id="responseGetRangoEstadisticaPersonal" result="responseGetRangoEstadisticaPersonal_resultHandler(event)"/>
</mx:VBox>
